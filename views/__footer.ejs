        <script>
        
            // function palaced outside of document.ready to ensure global scope
            function getCount()
                        {
                            var textarea = $("#notes")
                            var charLabel = $("#charCount")
                            var characterCount = textarea.val().length
                            charLabel.text(`${characterCount} of 300 characters`)
                        }
            $(document).ready(function()
            {       
                    

                        // custom validation
                        (() => {
                        'use strict'
                        // Fetch all the forms we want to apply custom Bootstrap validation styles to
                        const forms = document.querySelectorAll('.needs-validation')

                        // Loop over them and prevent submission
                        Array.from(forms).forEach(form => {
                            form.addEventListener('submit', event => {
                            if (!form.checkValidity()) {
                                event.preventDefault()
                                event.stopPropagation()
                            }

                            form.classList.add('was-validated')
                            }, false)
                        })
                        })()

                      // Function to show loader
                        function showLoader() 
                        {
                            $(".buttonText").attr("hidden",true)
                            $(".loader").removeAttr("hidden")

                            $('.loader').show();
                        }
                        function hideLoader()
                        {
                            $('.loader').hide()
                        }
                        // showModal
                        function showModal() 
                        {
                            $("#serviceRequestModal").modal('show')
                        }
                        
                        // function to handle form submission
                        $('#quote').submit(function (e)
                        {
                            e.preventDefault();
                            // perform form validation
                            if(this.checkValidity()){
                                showLoader() // show loader
                                debugger
                                //when other is chosen, use the value in the textbox
                                if ($('#referralPerson').val()=== 'Other'){
                                    $('referralPerson').val($('otherReferral').val())
                                }
                                // make AJAX request to the server
                                $.ajax({
                                    url: $(this).attr('action'),
                                    type: $(this).attr('method'),
                                    data: $(this).serialize(),
                                    success: function(response){
                                        // if the request is successful hide the loader and show the modal
                                        hideLoader()
                                        // console.log(response)
                                        if (response.success){
                                            debugger
                                            showModal()
                                        }else {
                                            debugger
                                            alert('Credentials incorrect. Please try again')
                                        }
                                    },
                                    error: function(xhr, status, error) {
                                    hideLoader();
                                    alert(`Error: ${error.message}`); // Display the error message
                                    console.log(xhr.responseText); // Log the server response for detailed error analysis
                                }
                                })  
                            } else{
                                // If form validation fails, prevent submission and display validation messages
                                this.classList.add('was-validated')
                            }
                                                                                                                
                        })


                //SCROLL BUTTON
                let scrollBtn = $("#topScrollBtn")

                function checkScroll()
                {
                        //  when user scrolls show button
                        if ($(window).scrollTop() > 20){
                        scrollBtn.fadeIn()
                    }else{
                        scrollBtn.hide()
                    }
                }
                checkScroll() // run on page load to set state

                //attach function to scroll event
                $(window).scroll(function()
                {
                checkScroll()
                })
                // when button is clicked go to the top of the document
                window.goToTop = function()
                {
                    $("html,body").animate({scrollTop: 0},"fast")
                }
                   
            })
            function showReferralBox()
            {
                debugger
                if( $('#referralPerson').val()=== 'Other'){
                    $(".otherReferralDiv").removeAttr('hidden')
                    
                }else{
                    $(".otherReferralDiv").attr("hidden",true)
                    //clear value when div is hidden
                    $('#otherReferral').val('')
                }
            }
            // DataTables functions and styling
           

          // service request data table
    var datatable= $('#serviceRequests').DataTable({
    responsive: false,
    select: true,
    paging: true,
    searching: true,
    ordering: false,
    info: true,
    autoWidth: false,
    scrollX: true,
    scrollY: true,
    scrollCollapse: true,
    dom: '<"d-flex justify-content-between align-items-center"Bf>rt<"d-flex justify-content-between"lp><"clear">',
    buttons: [
    ],
    lengthMenu: [
        [10, 25, 50, -1],
        [10, 25, 50, 'All']
    ],
    // columnDefs: [
    //     { width: "5%", targets: 0 },  // ID column
    //     { width: "6%", targets: 1 },  // First Name column
    //     { width: "8%", targets: 2 },  // Last Name column
    //     { width: "13%", targets: 3 }, // Email column
    //     { width: "8%", targets: 4 },  // Cell column
    //     { width: "8%", targets: 5 },  // Address column
    //     { width: "8%", targets: 6 },  // Suburb column
    //     { width: "8%", targets: 7 },  // City column
    //     { width: "10%", targets: 8 }, // Requests column
    //     { width: "8%", targets: 9 },  // Date Created column
    //     { width: "8%", targets: 10 },  // Status column
    //     { width: "12%", targets: 11 } // Actions column
    // ]
   
    
});
 // Adjust column widths to match what is set above
 datatable.columns.adjust().draw()
              
            // Save button click handler
        $('#serviceRequests tbody').on('click', '.save-row', function() {
            var $row = $(this).closest('tr');
             var rowData =  {
                id: $(this).data('id'),
                first_name: $row.find('td').eq(1).html().trim(),
                last_name: $row.find('td').eq(2).html().trim(),
                email: $row.find('td').eq(3).html().trim(),
                cell: $row.find('td').eq(4).html().trim(),
                address: $row.find('td').eq(5).html().trim(),
                suburb: $row.find('td').eq(6).html().trim(),
                city: $row.find('td').eq(7).html().trim(),
                requests: $row.find('td').eq(8).html().trim(),
                status: $row.find('select.status-select').val()

            };
            
            // Send updated data to the server
            $.ajax({
                url: '/admin/update-service-request',
                method: 'POST',
                data: rowData,
                success: function(response) {
                    // Handle success
                    alert('Row updated successfully');
                    window.location.reload()
                },
                error: function(error) {
                    // Handle error
                    console.error('Error updating row', error);
                }
            });
        });

        // view services button click handler
        $('#serviceRequests tbody').on('click', '.view-services', function() {
            // get the modal
            const servicesModal = $('#servicesModal')
            // the paragraph
            const pServicesRequested = $('#pServicesRequested')
            // the button
            const button = $(this)
            const rowId = button.data('id')

            // find the row data based on the row id
            const rowData = processedData.find(row =>row.id == rowId)

            if (rowData){
                if (rowData.requested_services){
                // populate modal content
                pServicesRequested.html(rowData.requested_services.split(',').join('<br>'))
                }else{
                      // Handle cases where requestedServices is undefined
                    pServicesRequested.html('No services requested.');
                }
                
                // show the model
                servicesModal.show()

            } 
        })
        // view referral button click handler
        $('#serviceRequests tbody').on('click', '.view-referral', function() {
            // get the modal
            const referralModal = $('#referralModal')
            // the paragraph
            const pReferredBy = $('#pReferredBy')
            // the button
            const button = $(this)
            const rowId = button.data('id')

            // find the row data based on the row id
            const rowData = processedData.find(row =>row.id == rowId)

            if (rowData){
                if (rowData.referral_person){
                // populate modal content
                pReferredBy.html(rowData.referral_person)
                }
                
                // show the model
                referralModal.show()

            } 
        })

        // Delete button click handler
        $('#serviceRequests tbody').on('click', '.delete-row', function() {
            var $row = $(this).closest('tr');
             var rowData =  {
                id: $(this).data('id'),
                first_name: $row.find('td').eq(1).html().trim(),
                last_name: $row.find('td').eq(2).html().trim(),
                email: $row.find('td').eq(3).html().trim(),
                cell: $row.find('td').eq(4).html().trim(),
                address: $row.find('td').eq(5).html().trim(),
                suburb: $row.find('td').eq(6).html().trim(),
                city: $row.find('td').eq(7).html().trim(),
                requests: $row.find('td').eq(8).html().trim(),
                status: $row.find('select.status-select').val()
            };
            //  console.log(rowData); // Print the row data to the console to verify
            // Send updated data to the server
            if(confirm("Are you sure you want to delete this request?")){
            $.ajax({
                url: '/admin/delete-service-request',
                method: 'POST',
                data: rowData,
                success: function(response) {
                    // Handle success
                    alert('Row deleted successfully');
                    window.location.reload()
                },
                error: function(error) {
                    // Handle error
                    console.error('Error deleting row', error);
                }
            });
        }
        });
            // service request datatable function end
            // testimonial datatable
             // service request data table
        var testimonialDatatable =  $('#testimonials').DataTable({
                responsive: false,
                select:true,
                paging: true,
                searching: true,
                ordering: true,
                info: true,
                autoWidth: false,
                scrollX:"true",
                scrollY: "true",
                scrollCollapse: true,
                dom:  '<"d-flex justify-content-between align-items-center"f>rt<"d-flex justify-content-between"lp><"clear">',
                lengthMenu: [
        [10, 25, 50, -1],
        [10, 25, 50, 'All']
    ],
              columnDefs: [
             { width: "5%", targets: 0, }, // ID column
             { width: "6%", targets: 1 ,}, // heading column
             { width: "8%", targets: 2 }, // content column
             { width: "8%", targets: 3 }, // Date Created column 
        ]
})
 // Adjust column widths to match what is set above
 testimonialDatatable.columns.adjust().draw()
              
            // Save button click handler
        $('#testimonials tbody').on('click', '.save-testimonial', function() {
            var $row = $(this).closest('tr');
             var rowData =  {
                id: $(this).data('id'),
                heading: $row.find('td').eq(1).html().trim(),
                content: $row.find('td').eq(2).html().trim()
            };
            
            // Send updated data to the server
            $.ajax({
                url: '/admin/update-testimonial',
                method: 'POST',
                data: rowData,
                success: function(response) {
                    // Handle success
                    alert('Row updated successfully');
                    location.reload()
                },
                error: function(error) {
                    // Handle error
                    console.error('Error updating row', error);
                }
            });
        });

        // Delete button click handler
        $('#testimonials tbody').on('click', '.delete-testimonial', function() {
            var $row = $(this).closest('tr');
             var rowData =  {
                id: $(this).data('id'),
                header: $row.find('td').eq(1).html().trim(),
                content: $row.find('td').eq(2).html().trim(), 
            };
            if(confirm("Are you sure you want to delete this testimonial?")){
            //  console.log(rowData); // Print the row data to the console to verify
            // Send updated data to the server
            $.ajax({
                url: '/admin/delete-testimonial',
                method: 'POST',
                data: rowData,
                success: function(response) {
                    // Handle success
                    alert('Row deleted successfully');
                    location.reload()// force page reload
                },
                error: function(error) {
                    // Handle error
                    console.error('Error deleting row', error);
                }
            });
        }
        });

            // completed projects data table
            var completedProjectDatatable =  $('#completedProjects').DataTable({
                responsive: false,
                select:true,
                paging: true,
                searching: true,
                ordering: true,
                info: true,
                autoWidth: false,
                scrollX:"true",
                scrollY: "true",
                scrollCollapse: true,
                dom:  '<"d-flex justify-content-between align-items-center"f>rt<"d-flex justify-content-between"lp><"clear">',
                lengthMenu: [
        [10, 25, 50, -1],
        [10, 25, 50, 'All']
    ],
              columnDefs: [
             { width: "5%", targets: 0, }, // ID column
             { width: "6%", targets: 1 ,}, // heading column
             { width: "8%", targets: 2 }, // image url column
             
        ]
})
 // Adjust column widths to match what is set above
 completedProjectDatatable.columns.adjust().draw()
              
          // Save button click handler
          $('#completedProjects tbody').on('click', '.save-project', function() {
            var $row = $(this).closest('tr');
             var rowData =  {
                id: $(this).data('id'),
                heading: $row.find('td').eq(1).html().trim(),
                imageurl: $row.find('td').eq(2).html().trim()
            };
            
            // Send updated data to the server
            $.ajax({
                url: '/admin/update-project',
                method: 'POST',
                data: rowData,
                success: function(response) {
                    // Handle success
                    alert('Row updated successfully');
                    window.location.reload()
                },
                error: function(error) {
                    // Handle error
                    console.error('Error updating row', error);
                }
            });
        });

            // Delete button click handler
        $('#completedProjects tbody').on('click', '.delete-project', function() {
            var $row = $(this).closest('tr');
             var rowData =  {
                id: $(this).data('id'),
                header: $row.find('td').eq(1).html().trim(),
                imageurl: $row.find('td').eq(2).html().trim(), 
            };
            if(confirm("Are you sure you want to delete this row?")){
            //  console.log(rowData); // Print the row data to the console to verify
            // Send updated data to the server
            $.ajax({
                url: '/admin/delete-project',
                method: 'POST',
                data: rowData,
                success: function(response) {
                    // Handle success
                    alert('Row deleted successfully');
                     window.location.reload()// force page reload
                },
                error: function(error) {
                    // Handle error
                    console.error('Error deleting row', error);
                }
            });
        }
        });
            
        </script>
        
        
        <div class="footer"  >
            <p>
                
                Nothnagel Tech Solutions <i class="far fa-copyright"></i> <%= currentYear %>
            </p>
        </div>
    </div>
<!-- container div end -->

</body>

</html>